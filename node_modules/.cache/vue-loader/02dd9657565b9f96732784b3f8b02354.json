{"remainingRequest":"/home/fenil/work/projects/vue/clothing_vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/fenil/work/projects/vue/clothing_vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/fenil/work/projects/vue/clothing_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/fenil/work/projects/vue/clothing_vue/src/pages/Products.vue?vue&type=template&id=7b19cff0&scoped=true&","dependencies":[{"path":"/home/fenil/work/projects/vue/clothing_vue/src/pages/Products.vue","mtime":1645072479887},{"path":"/home/fenil/work/projects/vue/clothing_vue/node_modules/cache-loader/dist/cjs.js","mtime":1645072479199},{"path":"/home/fenil/work/projects/vue/clothing_vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1645072479803},{"path":"/home/fenil/work/projects/vue/clothing_vue/node_modules/cache-loader/dist/cjs.js","mtime":1645072479199},{"path":"/home/fenil/work/projects/vue/clothing_vue/node_modules/vue-loader/lib/index.js","mtime":1645072479803}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}